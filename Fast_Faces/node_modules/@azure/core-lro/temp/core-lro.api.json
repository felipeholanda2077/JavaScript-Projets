{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.40.3",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@hidden",
          "syntaxKind": "modifier"
        }
      ],
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@azure/core-lro!",
  "docComment": "",
  "name": "@azure/core-lro",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@azure/core-lro!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "TypeAlias",
          "canonicalReference": "@azure/core-lro!CancelOnProgress:type",
          "docComment": "/**\n * CancelOnProgress is used as the return value of a Poller's onProgress method. When a user invokes onProgress, they're required to pass in a function that will be called as a callback with the new data received each time the poll operation is updated. onProgress returns a function that will prevent any further update to reach the original callback.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type CancelOnProgress = "
            },
            {
              "kind": "Content",
              "text": "() => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/poller/models.ts",
          "releaseTag": "Public",
          "name": "CancelOnProgress",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@azure/core-lro!createHttpPoller:function(1)",
          "docComment": "/**\n * Creates a poller that can be used to poll a long-running operation.\n *\n * @param lro - Description of the long-running operation\n *\n * @param options - options to configure the poller\n *\n * @returns an initialized poller\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createHttpPoller<TResult, TState extends "
            },
            {
              "kind": "Reference",
              "text": "OperationState",
              "canonicalReference": "@azure/core-lro!OperationState:interface"
            },
            {
              "kind": "Content",
              "text": "<TResult>"
            },
            {
              "kind": "Content",
              "text": ">(lro: "
            },
            {
              "kind": "Reference",
              "text": "LongRunningOperation",
              "canonicalReference": "@azure/core-lro!LongRunningOperation:interface"
            },
            {
              "kind": "Content",
              "text": ", options?: "
            },
            {
              "kind": "Reference",
              "text": "CreateHttpPollerOptions",
              "canonicalReference": "@azure/core-lro!CreateHttpPollerOptions:interface"
            },
            {
              "kind": "Content",
              "text": "<TResult, TState>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "PollerLike",
              "canonicalReference": "@azure/core-lro!PollerLike:interface"
            },
            {
              "kind": "Content",
              "text": "<TState, TResult>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/http/poller.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "lro",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "isOptional": false
            },
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "isOptional": true
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TResult",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TState",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "createHttpPoller"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-lro!CreateHttpPollerOptions:interface",
          "docComment": "/**\n * Options for `createPoller`.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface CreateHttpPollerOptions<TResult, TState> "
            }
          ],
          "fileUrlPath": "src/http/models.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TResult",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TState",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "CreateHttpPollerOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!CreateHttpPollerOptions#intervalInMs:member",
              "docComment": "/**\n * Defines how much time the poller is going to wait before making a new request to the service.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "intervalInMs?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "intervalInMs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!CreateHttpPollerOptions#processResult:member",
              "docComment": "/**\n * A function to process the result of the LRO.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "processResult?: "
                },
                {
                  "kind": "Content",
                  "text": "(result: unknown, state: TState) => TResult | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TResult>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "processResult",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!CreateHttpPollerOptions#resolveOnUnsuccessful:member",
              "docComment": "/**\n * Control whether to throw an exception if the operation failed or was canceled.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resolveOnUnsuccessful?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "resolveOnUnsuccessful",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!CreateHttpPollerOptions#resourceLocationConfig:member",
              "docComment": "/**\n * The potential location of the result of the LRO if specified by the LRO extension in the swagger.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resourceLocationConfig?: "
                },
                {
                  "kind": "Reference",
                  "text": "ResourceLocationConfig",
                  "canonicalReference": "@azure/core-lro!ResourceLocationConfig:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "resourceLocationConfig",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!CreateHttpPollerOptions#restoreFrom:member",
              "docComment": "/**\n * A serialized poller which can be used to resume an existing paused Long-Running-Operation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "restoreFrom?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "restoreFrom",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!CreateHttpPollerOptions#updateState:member",
              "docComment": "/**\n * A function to process the state of the LRO.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateState?: "
                },
                {
                  "kind": "Content",
                  "text": "(state: TState, response: "
                },
                {
                  "kind": "Reference",
                  "text": "OperationResponse",
                  "canonicalReference": "@azure/core-lro!OperationResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": ") => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "updateState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!CreateHttpPollerOptions#withOperationLocation:member",
              "docComment": "/**\n * A function to be called each time the operation location is updated by the service.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "withOperationLocation?: "
                },
                {
                  "kind": "Content",
                  "text": "(operationLocation: string) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "withOperationLocation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@azure/core-lro!deserializeState:function(1)",
          "docComment": "/**\n * Deserializes the state\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function deserializeState<TState>(serializedState: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "RestorableOperationState",
              "canonicalReference": "@azure/core-lro!RestorableOperationState:type"
            },
            {
              "kind": "Content",
              "text": "<TState>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/poller/operation.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "serializedState",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "TState",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "deserializeState"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-lro!LongRunningOperation:interface",
          "docComment": "/**\n * Description of a long running operation.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface LongRunningOperation<T = "
            },
            {
              "kind": "Content",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/http/models.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "LongRunningOperation",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!LongRunningOperation#sendInitialRequest:member",
              "docComment": "/**\n * A function that can be used to send initial request to the service.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendInitialRequest: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "OperationResponse",
                  "canonicalReference": "@azure/core-lro!OperationResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sendInitialRequest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!LongRunningOperation#sendPollRequest:member",
              "docComment": "/**\n * A function that can be used to poll for the current status of a long running operation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendPollRequest: "
                },
                {
                  "kind": "Content",
                  "text": "(path: string, options?: {\n        abortSignal?: "
                },
                {
                  "kind": "Reference",
                  "text": "AbortSignalLike",
                  "canonicalReference": "@azure/abort-controller!AbortSignalLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "OperationResponse",
                  "canonicalReference": "@azure/core-lro!OperationResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sendPollRequest",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-lro!OperationConfig:interface",
          "docComment": "/**\n * Configurations for how to poll the operation and to check whether it has terminated.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OperationConfig "
            }
          ],
          "fileUrlPath": "src/poller/models.ts",
          "releaseTag": "Public",
          "name": "OperationConfig",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!OperationConfig#initialUrl:member",
              "docComment": "/**\n * The initial Url\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialUrl?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "initialUrl",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!OperationConfig#metadata:member",
              "docComment": "/**\n * metadata about the operation\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "metadata?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "metadata",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!OperationConfig#operationLocation:member",
              "docComment": "/**\n * The operation location\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "operationLocation?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "operationLocation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!OperationConfig#requestMethod:member",
              "docComment": "/**\n * The request method\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "requestMethod?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "requestMethod",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!OperationConfig#resourceLocation:member",
              "docComment": "/**\n * The resource location\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resourceLocation?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "resourceLocation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-lro!OperationResponse:interface",
          "docComment": "/**\n * The type of the response of a LRO.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OperationResponse<T = "
            },
            {
              "kind": "Content",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": ", TRequest extends "
            },
            {
              "kind": "Reference",
              "text": "RawRequest",
              "canonicalReference": "@azure/core-lro!RawRequest:interface"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "RawRequest",
              "canonicalReference": "@azure/core-lro!RawRequest:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/http/models.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "typeParameterName": "TRequest",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "name": "OperationResponse",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!OperationResponse#flatResponse:member",
              "docComment": "/**\n * The flattened response\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "flatResponse: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "flatResponse",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!OperationResponse#rawResponse:member",
              "docComment": "/**\n * The raw response\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rawResponse: "
                },
                {
                  "kind": "Reference",
                  "text": "RawResponse",
                  "canonicalReference": "@azure/core-lro!RawResponse:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TRequest>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rawResponse",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-lro!OperationState:interface",
          "docComment": "/**\n * While the poller works as the local control mechanism to start triggering and wait for a long-running operation, OperationState documents the status of the remote long-running operation. It gets updated after each poll.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface OperationState<TResult> "
            }
          ],
          "fileUrlPath": "src/poller/models.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TResult",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "OperationState",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!OperationState#error:member",
              "docComment": "/**\n * Will exist if the operation encountered any error.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "error?: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!OperationState#result:member",
              "docComment": "/**\n * Will exist if the operation produced a result of the expected type.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "result?: "
                },
                {
                  "kind": "Content",
                  "text": "TResult"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "result",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!OperationState#status:member",
              "docComment": "/**\n * The current status of the operation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "status: "
                },
                {
                  "kind": "Reference",
                  "text": "OperationStatus",
                  "canonicalReference": "@azure/core-lro!OperationStatus:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@azure/core-lro!OperationStatus:type",
          "docComment": "/**\n * The set of possible states an operation can be in at any given time.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type OperationStatus = "
            },
            {
              "kind": "Content",
              "text": "\"notStarted\" | \"running\" | \"succeeded\" | \"canceled\" | \"failed\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/poller/models.ts",
          "releaseTag": "Public",
          "name": "OperationStatus",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-lro!PollerLike:interface",
          "docComment": "/**\n * A simple poller interface.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface PollerLike<TState extends "
            },
            {
              "kind": "Reference",
              "text": "OperationState",
              "canonicalReference": "@azure/core-lro!OperationState:interface"
            },
            {
              "kind": "Content",
              "text": "<TResult>"
            },
            {
              "kind": "Content",
              "text": ", TResult> extends "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<TResult>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/poller/models.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TState",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TResult",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "PollerLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!PollerLike#isDone:member",
              "docComment": "/**\n * Returns true if the poller has finished polling.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly isDone: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isDone",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!PollerLike#isStopped:member",
              "docComment": "/**\n * Returns true if the poller is stopped.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly isStopped: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isStopped",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@azure/core-lro!PollerLike#onProgress:member(1)",
              "docComment": "/**\n * Invokes the provided callback after each polling is completed, sending the current state of the poller's operation.\n *\n * It returns a method that can be used to stop receiving updates on the given callback function.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onProgress(callback: "
                },
                {
                  "kind": "Content",
                  "text": "(state: TState) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "CancelOnProgress",
                  "canonicalReference": "@azure/core-lro!CancelOnProgress:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "callback",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "onProgress"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!PollerLike#operationState:member",
              "docComment": "/**\n * Returns the state of the operation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly operationState: "
                },
                {
                  "kind": "Content",
                  "text": "TState | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "operationState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@azure/core-lro!PollerLike#poll:member(1)",
              "docComment": "/**\n * Returns a promise that will resolve once a single polling request finishes. It does this by calling the update method of the Poller's operation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "poll(options?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        abortSignal?: "
                },
                {
                  "kind": "Reference",
                  "text": "AbortSignalLike",
                  "canonicalReference": "@azure/abort-controller!AbortSignalLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TState>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "poll"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@azure/core-lro!PollerLike#pollUntilDone:member(1)",
              "docComment": "/**\n * Returns a promise that will resolve once the underlying operation is completed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pollUntilDone(pollOptions?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        abortSignal?: "
                },
                {
                  "kind": "Reference",
                  "text": "AbortSignalLike",
                  "canonicalReference": "@azure/abort-controller!AbortSignalLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<TResult>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "pollOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "name": "pollUntilDone"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!PollerLike#result:member",
              "docComment": "/**\n * Returns the result value of the operation, regardless of the state of the poller. It can return undefined or an incomplete form of the final TResult value depending on the implementation.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly result: "
                },
                {
                  "kind": "Content",
                  "text": "TResult | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "result",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@azure/core-lro!PollerLike#serialize:member(1)",
              "docComment": "/**\n * Returns a promise that could be used for serialized version of the poller's operation by invoking the operation's serialize method.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "serialize(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "serialize"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@azure/core-lro!PollerLike#submitted:member(1)",
              "docComment": "/**\n * Returns a promise that could be used to check if the poller has been submitted.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "submitted(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "submitted"
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 4,
              "endIndex": 6
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-lro!RawRequest:interface",
          "docComment": "/**\n * Simple type of the raw request.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RawRequest "
            }
          ],
          "fileUrlPath": "src/http/models.ts",
          "releaseTag": "Public",
          "name": "RawRequest",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!RawRequest#body:member",
              "docComment": "/**\n * The request body\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "body?: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "body",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!RawRequest#method:member",
              "docComment": "/**\n * The HTTP request method\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "method: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "method",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!RawRequest#url:member",
              "docComment": "/**\n * The request path\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "url: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "url",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@azure/core-lro!RawResponse:interface",
          "docComment": "/**\n * Simple type of the raw response.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface RawResponse<TRequest extends "
            },
            {
              "kind": "Reference",
              "text": "RawRequest",
              "canonicalReference": "@azure/core-lro!RawRequest:interface"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "RawRequest",
              "canonicalReference": "@azure/core-lro!RawRequest:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/http/models.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "TRequest",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "name": "RawResponse",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!RawResponse#body:member",
              "docComment": "/**\n * The parsed response body\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "body?: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "body",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!RawResponse#headers:member",
              "docComment": "/**\n * A HttpHeaders collection in the response represented as a simple JSON object where all header names have been normalized to be lower-case.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "headers: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [headerName: string]: string;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "headers",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!RawResponse#request:member",
              "docComment": "/**\n * The raw request that was sent to the server\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "request: "
                },
                {
                  "kind": "Content",
                  "text": "TRequest"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "request",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@azure/core-lro!RawResponse#statusCode:member",
              "docComment": "/**\n * The HTTP status code\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "statusCode: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "statusCode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@azure/core-lro!ResourceLocationConfig:type",
          "docComment": "/**\n * The potential location of the result of the LRO if specified by the LRO extension in the swagger.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ResourceLocationConfig = "
            },
            {
              "kind": "Content",
              "text": "\"azure-async-operation\" | \"location\" | \"original-uri\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/http/models.ts",
          "releaseTag": "Public",
          "name": "ResourceLocationConfig",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@azure/core-lro!RestorableOperationState:type",
          "docComment": "/**\n * Type of a restorable long-running operation.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RestorableOperationState<T> = "
            },
            {
              "kind": "Content",
              "text": "T & {\n    config: "
            },
            {
              "kind": "Reference",
              "text": "OperationConfig",
              "canonicalReference": "@azure/core-lro!OperationConfig:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/poller/models.ts",
          "releaseTag": "Public",
          "name": "RestorableOperationState",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        }
      ]
    }
  ]
}
